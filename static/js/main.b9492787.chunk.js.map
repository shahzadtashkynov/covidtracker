{"version":3,"sources":["comps/Cards/Cards.module.css","comps/Cards/Cards.jsx","api/index.js","comps/Chart/Chart.jsx","comps/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","comps/Chart/Chart.module.css","comps/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","Date","toDateString","url","fetchData","country","a","changeableurl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","corona","image","alt","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9492787.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__u5wkS\",\"card\":\"Cards_card__2Hp5S\",\"infected\":\"Cards_infected__CTg1U\",\"recovered\":\"Cards_recovered__222Qi\",\"deaths\":\"Cards_deaths__36u4J\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport Countup from \"react-countup\"\nimport cx from \"classnames\";\n\nimport styles from \"./Cards.module.css\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    if (!confirmed) {\n        return 'Loading ...'\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent >\n                        <Typography color=\"textSecondary\" gutterBottom> Infected </Typography>\n                        <Typography variant=\"h5\">\n                            <Countup start={0} end={confirmed.value} duration={2.5}\n                            ></Countup>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\"> Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent >\n                        <Typography color=\"textSecondary\" gutterBottom> Recovered </Typography>\n                        <Typography variant=\"h5\">\n                            <Countup start={0} end={recovered.value} duration={2.5}\n                            ></Countup>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\"> Number of recovered from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent >\n                        <Typography color=\"textSecondary\" gutterBottom> Deaths </Typography>\n                        <Typography variant=\"h5\">\n\n                            <Countup start={0} end={deaths.value} duration={2.5}\n                            >\n                            </Countup>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\"> Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid >\n        </div >\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableurl=url;\n\n    if(country){\n        changeableurl= `${url}/countries/${country}`;\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableurl);\n\n        const modifiedData = {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate\n        }\n\n        return modifiedData;\n    }\n    catch (error) {\n        console.log(error);\n    }\n\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }\n        ));\n        return modifiedData;\n    } catch (error) {\n\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length ?\n            <Line\n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333ff',\n                        fill: true,\n                    }, \n                  {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255,0,0,0.5)',\n                        fill: true,\n                    }\n                ],\n                }} /> : null\n    );\n\n    const barChart = (\n        confirmed\n            ? (\n                <Bar\n                    data={{\n                        labels: ['Infected', 'Recovered', 'Deaths'],\n                        datasets: [{\n                            label: 'People',\n                            backgroundColor: [\n                                'rgba(0,0,250,0.5)',\n                                'rgba(0,250,0,0.5)',\n                                'rgba(250,0,0,0.5)',],\n                            data: [confirmed.value, recovered.value, deaths.value]\n                        }]\n                    }}\n                    options={{\n                        legend: { display: false },\n                        title: { display: true, text: `Current state in ${country}` },\n                    }} />\n            )\n            : null\n    )\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\"\n\nimport styles from './CountryPicker.module.css'\n\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({handleCountryChange}) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\n                </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","import React, { Component } from 'react';\n\nimport { Cards, Chart, CountryPicker } from './comps'\nimport styles from './App.module.css'\nimport { fetchData } from './api';\n\nimport corona from './images/image.png'\n\nclass App extends Component {\n\n  state = {\n    data: {},\n    country:'',\n  }\n\n  async  componentDidMount() {\n    const fetchedData = await fetchData();\n    \n    this.setState({ data: fetchedData});\n  }\n\n  handleCountryChange = async(country)=>{\n    const fetchedData = await fetchData(country);\n    this.setState({data:fetchedData,country:country});\n  }\n\n  render() {\n    const { data,country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img src={corona} className={styles.image} alt=\"COVID-19\"/>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country}/>\n      </div>\n    );\n  }\n\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1ZEQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1hwvB\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}